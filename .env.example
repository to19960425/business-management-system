# =================================================
# BUSINESS MANAGEMENT SYSTEM - ENVIRONMENT CONFIGURATION
# =================================================
# Copy this file to .env and customize the values for your environment
# WARNING: Never commit .env file to version control!

# =================================================
# DATABASE CONFIGURATION
# =================================================
# MySQL 8.0 database settings
DB_HOST=db
DB_PORT=3306
# External port for database (mapped to localhost:3307)
DB_EXTERNAL_PORT=3307
DB_NAME=business_management
DB_USERNAME=bmuser
DB_PASSWORD=bmpass
# SECURITY: Change this strong password in production
DB_ROOT_PASSWORD=rootpass
# Test database name
DB_TEST_NAME=test_business_management

# =================================================
# APPLICATION CONFIGURATION
# =================================================
APP_NAME=Business Management System
# Environment: development, staging, production
APP_ENV=development
# Debug mode: true for development, false for production
APP_DEBUG=true
# Application URL
APP_URL=http://localhost

# =================================================
# BACKEND CONFIGURATION (CakePHP)
# =================================================
BACKEND_HOST=backend
BACKEND_PORT=8000
BACKEND_URL=http://localhost:8000

# =================================================
# FRONTEND CONFIGURATION (React)
# =================================================
FRONTEND_HOST=frontend
FRONTEND_PORT=3000
FRONTEND_URL=http://localhost:3000

# =================================================
# JWT AUTHENTICATION CONFIGURATION
# =================================================
# SECURITY: Generate a secure random string for production
# Use: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-here
JWT_ALGORITHM=HS256
# JWT expiration in seconds (3600 = 1 hour)
JWT_EXPIRATION=3600
# JWT refresh token expiration in seconds (604800 = 7 days)
JWT_REFRESH_EXPIRATION=604800

# =================================================
# EMAIL CONFIGURATION
# =================================================
# Email server settings (using Mailhog for development)
MAIL_HOST=mailhog
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS=noreply@businessmanagement.local
MAIL_FROM_NAME="${APP_NAME}"

# =================================================
# REDIS CONFIGURATION (CACHING)
# =================================================
# Redis for caching and session storage
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=null
# Redis database number (0-15)
REDIS_DB=0

# =================================================
# API CONFIGURATION
# =================================================
API_VERSION=v1
API_PREFIX=/api/v1
# API rate limiting (requests per minute)
API_RATE_LIMIT=60
# API timeout in seconds
API_TIMEOUT=30

# =================================================
# FILE UPLOAD CONFIGURATION
# =================================================
# Maximum file size for uploads
MAX_FILE_SIZE=10M
# Upload directory path
UPLOAD_PATH=/uploads
# Allowed file extensions (comma-separated)
ALLOWED_EXTENSIONS=jpg,jpeg,png,gif,pdf,doc,docx,xls,xlsx

# =================================================
# LOCALIZATION & TIMEZONE
# =================================================
# Application timezone
APP_TIMEZONE=Asia/Tokyo
# Default locale
APP_LOCALE=ja_JP
APP_DEFAULT_LOCALE=ja_JP

# =================================================
# LOGGING CONFIGURATION
# =================================================
# Log level: debug, info, warning, error
LOG_LEVEL=debug
# Log file path
LOG_PATH=/var/log/app.log
# Log rotation (daily, weekly, monthly)
LOG_ROTATION=daily

# =================================================
# SECURITY CONFIGURATION
# =================================================
# SECURITY: Generate secure random strings for production
# Use: openssl rand -base64 32
SECURITY_SALT=your-security-salt-here
ENCRYPTION_KEY=your-encryption-key-here

# Password hashing settings
PASSWORD_HASH_ALGO=bcrypt
PASSWORD_HASH_COST=12

# Session configuration
SESSION_DRIVER=redis
SESSION_LIFETIME=120
SESSION_ENCRYPT=true
SESSION_SECURE=false
SESSION_SAME_SITE=lax

# CORS settings
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:80
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With
CORS_EXPOSED_HEADERS=
CORS_MAX_AGE=3600
CORS_CREDENTIALS=true

# =================================================
# DEVELOPMENT TOOLS
# =================================================
# phpMyAdmin port
PHPMYADMIN_PORT=8081
# Mailhog web interface port
MAILHOG_PORT=8025

# =================================================
# DOCKER CONFIGURATION
# =================================================
# Docker network name
DOCKER_NETWORK=business-management-network

# =================================================
# MONITORING & PERFORMANCE
# =================================================
# Query logging
QUERY_LOG_ENABLED=true
QUERY_LOG_SLOW_THRESHOLD=2000

# Cache settings
CACHE_DRIVER=redis
CACHE_TTL=3600

# =================================================
# BACKUP CONFIGURATION
# =================================================
# Database backup settings
BACKUP_ENABLED=true
BACKUP_SCHEDULE=daily
BACKUP_RETENTION_DAYS=30
BACKUP_PATH=/backups

# =================================================
# NOTIFICATION CONFIGURATION
# =================================================
# Slack webhook for notifications (optional)
SLACK_WEBHOOK_URL=
# Email notifications
NOTIFICATION_EMAIL=admin@businessmanagement.local

# =================================================
# PRODUCTION SECURITY NOTES
# =================================================
# 1. Change all default passwords and secrets
# 2. Set APP_DEBUG=false in production
# 3. Use HTTPS in production (set APP_URL to https://)
# 4. Configure proper CORS origins
# 5. Set strong JWT secrets
# 6. Use secure session settings
# 7. Configure proper file permissions
# 8. Enable proper logging and monitoring